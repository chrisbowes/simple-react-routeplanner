{"version":3,"sources":["store/app.store.js","components/waypoint-list-item/waypoint-list-item.component.js","components/info-box/info-box.component.js","components/waypoint-list/waypoint-list.component.js","components/leaflet-map/leaflet-map.component.js","components/leaflet-map-loader/leaflet-map-loader.component.js","components/download-route/download-route.component.js","App.js","serviceWorker.js","index.js"],"names":["Store","React","createContext","initialState","markers","polylines","userLocation","reducer","state","action","type","payload","filter","marker","Error","StoreProvider","props","useReducer","value","dispatch","Provider","children","WaypointListLi","styled","li","WaypointListItemInner","div","WaypointButton","button","WaypointLabel","span","Waypoint","useContext","onDragOver","handleOnDragOver","index","draggable","onDragStart","e","handleOnDragStart","onDragEnd","handleOnDragEnd","icon","onClick","data","InfoBoxEl","InfoBoxWrapper","InfoBox","WaypointListUl","ul","WaypointList","useState","draggedItem","setDraggedItem","draggedOverItem","setDraggedOverItem","markersList","setMarkersList","useEffect","dataTransfer","effectAllowed","setData","target","parentNode","setDragImage","items","item","splice","length","map","key","MapWrapper","LeafletMap","mapRef","useRef","layerRef","current","L","center","lat","lng","zoom","layers","tileLayer","attribution","on","latlng","toGeoJSON","layerGroup","addTo","clearLayers","polylineGeoJson","CustomIcon","Icon","extend","options","number","iconUrl","iconSize","iconAnchor","className","createIcon","document","createElement","label","setAttribute","innerHTML","this","appendChild","_setIconStyles","polyLineCoords","geometry","coordinates","push","newLine","polyline","color","weight","id","LeafletMapLoaderWrapper","LeafletMapLoaderContent","LoadingText","LeafletMapLoader","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","error","console","JSON","stringify","enableHighAccuracy","timeout","maximumAge","spin","size","style","DownloadButton","DownloadRoute","createExportObj","downloadDataUri","togpx","href","download","disabled","library","add","faTrashAlt","faBars","faCircleNotch","AppWrapper","AppSidebar","AppTitle","h1","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8434e0f4.chunk.js","sourcesContent":["import React from 'react'\n\nexport const Store = React.createContext();\n\nconst initialState = {\n    markers: [],\n    polylines: [],\n    userLocation: null\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'ADD_MARKER':\n      return { ...state, markers: [...state.markers, action.payload]};\n    case 'DELETE_MARKER':\n      return {...state, markers: [...state.markers.filter((marker) => marker !== action.payload)]};\n    case 'REORDER_MARKERS':\n        return {...state, markers: action.payload}\n    case 'UPDATE_POLYLINES':\n        return {...state, polylines: action.payload}\n    case 'SET_USER_LOCATION':\n        return {...state, userLocation: action.payload}\n    default:\n      throw new Error();\n  }\n}\n\nexport function StoreProvider(props) {\n    const [state, dispatch] = React.useReducer(reducer, initialState);\n    const value = { state, dispatch };\n    return <Store.Provider value={value}>{props.children}</Store.Provider>\n}","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Store } from '../../store/app.store';\nimport styled from 'styled-components';\n\nconst WaypointListLi = styled.li`\n    list-style-type: none;\n    margin: 0.2rem 0;\n    padding: 0.2rem 0;\n    box-sizing: border-box;\n`;\n\nconst WaypointListItemInner = styled.div`\n    display: flex;\n    justify-content: space-between;\n`;\n\nconst WaypointButton = styled.button`\n    color: #747474;\n    background-color: #383838;\n    border: none;\n    font-size: 1rem;\n    margin: 0;\n    padding: 0;\n`;\n\nconst WaypointLabel = styled.span`\n    display: inline-block;\n    padding: 0 1rem;\n`;\n\nconst Waypoint = (props) => {\n    const { dispatch } = React.useContext(Store);\n    return (\n        <WaypointListLi onDragOver={() => props.handleOnDragOver(props.index)}>\n            <WaypointListItemInner\n                draggable\n                onDragStart={e => props.handleOnDragStart(e, props.index)}\n                onDragEnd={props.handleOnDragEnd}>\n                <span>\n                    <WaypointButton><FontAwesomeIcon icon=\"bars\" /></WaypointButton>\n                    <WaypointLabel>Waypoint {props.index + 1}</WaypointLabel>\n                </span>\n                <WaypointButton onClick={() => dispatch({ type: 'DELETE_MARKER', payload: props.data })}><FontAwesomeIcon icon=\"trash-alt\" /></WaypointButton>\n            </WaypointListItemInner>\n        </WaypointListLi>\n    )\n}\n\nexport default Waypoint;","import React from 'react';\nimport styled from 'styled-components';\n\nconst InfoBoxEl = styled.div`\n  border-radius: 0.3rem;\n  box-sizing: border-box;\n  border: 1px solid #e1e1e1;\n  padding: 1rem;\n  line-height: 1.2;\n  font-size: 0.8rem;\n`;\nconst InfoBoxWrapper = styled.div`\n  flex-grow: 1;\n`;\n\nconst InfoBox = (props) => {\n  return (\n    <InfoBoxWrapper>\n      <InfoBoxEl>\n        {props.children}\n      </InfoBoxEl>\n    </InfoBoxWrapper>\n  )\n};\n\nexport default InfoBox;","import React from 'react';\nimport Waypoint from '../waypoint-list-item/waypoint-list-item.component';\nimport { Store } from '../../store/app.store';\nimport styled from 'styled-components';\nimport InfoBox from '../info-box/info-box.component';\n\nconst WaypointListUl = styled.ul`\n    margin: 0;\n    padding: 0;\n    flex-grow: 1;\n    overflow: scroll;\n`;\n\nconst WaypointList = () => {\n    const { state, dispatch } = React.useContext(Store);\n    const [draggedItem, setDraggedItem] = React.useState();\n    const [draggedOverItem, setDraggedOverItem] = React.useState();\n    const [markersList, setMarkersList] = React.useState();\n    React.useEffect(() => {\n        setMarkersList(state.markers)\n    },[state.markers])\n    const handleOnDragStart = (e, index) => {\n        setDraggedItem(state.markers[index]);\n        e.dataTransfer.effectAllowed = \"move\";\n        e.dataTransfer.setData(\"text/html\", e.target.parentNode);\n        e.dataTransfer.setDragImage(e.target.parentNode, 20, 20);\n    };\n    const handleOnDragOver = index => {\n        setDraggedOverItem(state.markers[index]);  \n        if (draggedItem === draggedOverItem) {\n          return;\n        }   \n        let items = state.markers.filter(item => item !== draggedItem);    \n        items.splice(index, 0, draggedItem); \n        setMarkersList(items);\n         \n      };\n    const handleOnDragEnd = () => {\n        dispatch({ type: 'REORDER_MARKERS', payload: markersList }) \n      };\n    return (\n        <>\n            { state.markers.length ?\n            <WaypointListUl>\n                { state.markers.map((marker, index) => {\n                    return (\n                        <Waypoint \n                            key={index}\n                            data={marker} \n                            index={index}\n                            handleOnDragStart={handleOnDragStart}\n                            handleOnDragEnd={handleOnDragEnd}\n                            handleOnDragOver={handleOnDragOver}/> \n                    )}\n                )}\n            </WaypointListUl>\n            :\n            <InfoBox>\n                Add markers to the map to build a sortable list. Delete and rearrange as desired. Then use the download option below to export your route in GPX format.\n            </InfoBox>\n            }\n        </>\n    )\n}\n\nexport default WaypointList;","import React from 'react';\nimport L from 'leaflet';\nimport styled from 'styled-components';\nimport { Store } from '../../store/app.store';\n\nconst MapWrapper = styled.div`\n  width: 100%;\n  height: 100vh;\n`;\nconst LeafletMap = () => {\n  const mapRef = React.useRef(null);\n  const layerRef = React.useRef(null);\n  const { state, dispatch } = React.useContext(Store);\n  React.useEffect(() => {\n    mapRef.current = L.map(\"map\", {\n      center: [state.userLocation.lat, state.userLocation.lng],\n      zoom: state.userLocation.zoom,\n      layers: [\n        L.tileLayer(\"http://{s}.tile.osm.org/{z}/{x}/{y}.png\", {\n          attribution:\n            '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        })\n      ]\n    });\n    mapRef.current.on('click', (e) => {\n      dispatch({ type: 'ADD_MARKER', payload: L.marker(e.latlng).toGeoJSON() })\n    });\n  }, [dispatch, state.userLocation.lat, state.userLocation.lng, state.userLocation.zoom]);\n\n  React.useEffect(() => {\n    layerRef.current = L.layerGroup().addTo(mapRef.current);\n  }, []);\n\n  React.useEffect(() => {\n    layerRef.current.clearLayers();\n    let polylineGeoJson = [];\n    L.CustomIcon = L.Icon.extend({\n      options: {\n        number: '',\n        iconUrl: '',\n        iconSize: [30, 30],\n        iconAnchor: [15, 15],\n        className: 'custom-icon'\n      },\n      createIcon: function () {\n        const div = document.createElement('div');\n        const label = document.createElement('div');\n        label.setAttribute(\"class\", \"number\");\n        label.innerHTML = this.options['number'] || '';\n        div.appendChild(label);\n        this._setIconStyles(div, 'icon');\n        return div;\n      },\n    });\n    if (state.markers.length) {\n      const polyLineCoords = [];\n      state.markers.map((marker, index) => {\n        const latlng = { lat: marker.geometry.coordinates[1], lng: marker.geometry.coordinates[0] };\n        polyLineCoords.push(latlng);\n        return L.marker(latlng, { icon: new L.CustomIcon({ number: index + 1 }) }).addTo(layerRef.current)\n      });\n      const newLine = L.polyline(polyLineCoords, { color: '#0f86e8', weight: 5 }).addTo(layerRef.current);\n      polylineGeoJson = [...polylineGeoJson, newLine.toGeoJSON()]\n    }\n    dispatch({ type: 'UPDATE_POLYLINES', payload: polylineGeoJson });\n  }, [dispatch, state.markers]);\n\n  return (\n    <MapWrapper id='map'></MapWrapper>\n  )\n}\n\nexport default LeafletMap;","import React from 'react';\nimport LeafletMap from '../leaflet-map/leaflet-map.component';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Store } from '../../store/app.store';\nimport styled from 'styled-components';\n\nconst LeafletMapLoaderWrapper = styled.div`\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n`;\nconst LeafletMapLoaderContent = styled.div`\n  text-align: center;\n  line-height: 1.5;  \n`;\nconst LoadingText = styled.div`\n  color: #666666;\n  margin: 2rem;\n`;\n\nconst LeafletMapLoader = () => {\n  const { state, dispatch } = React.useContext(Store);\n  React.useEffect(() => {\n    navigator.geolocation.getCurrentPosition((position) => {\n      dispatch({ type: 'SET_USER_LOCATION', payload: { lat: position.coords.latitude, lng: position.coords.longitude, zoom: 10 } })\n    },\n      (error) => {\n        console.error(JSON.stringify(error))\n        dispatch({ type: 'SET_USER_LOCATION', payload: { lat: 0, lng: 0, zoom: 2 } })\n      },\n      { enableHighAccuracy: false, timeout: 20000, maximumAge: 1000 }\n    )\n  }, [dispatch]);\n\n  return (\n    <LeafletMapLoaderWrapper>\n      {state.userLocation ?\n        <LeafletMap />\n        :\n        <LeafletMapLoaderContent>\n          <FontAwesomeIcon icon=\"circle-notch\" spin size='3x' style={{ color: '#0f86e8' }} />\n          <LoadingText>loading map and setting initial location</LoadingText>\n        </LeafletMapLoaderContent>\n      }\n    </LeafletMapLoaderWrapper>\n\n  )\n}\n\nexport default LeafletMapLoader;","import React from 'react';\nimport { Store } from '../../store/app.store';\nimport togpx from 'togpx';\nimport styled from 'styled-components';\n\nconst DownloadButton = styled.button`\n    border: 0;\n    background-color: #c3e452;\n    padding: 0.8rem;\n    border-radius: 5px;\n    color: #383838;\n    font-size: 1rem;\n    font-weight: bold;\n    opacity: 1;\n    transition: opacity 0.3s;\n    a {\n        text-decoration: none;\n        color: inherit;\n    }\n    :disabled {\n        opacity: 0;\n    }\n`;\n\nconst DownloadRoute = () => {\n    const { state } = React.useContext(Store);\n    const createExportObj = {\n        \"type\": \"FeatureCollection\",\n        \"features\": [...state.markers, ...state.polylines]\n    }\n    const downloadDataUri = state.markers.length ? `data:text/json;charset=utf-8,${togpx(createExportObj)}` : null;\n    return (\n        <>\n        { downloadDataUri ?\n            <DownloadButton><a href={downloadDataUri} download=\"route.gpx\">Download Route</a></DownloadButton>\n        :\n            <DownloadButton disabled>Download Route</DownloadButton>\n        }\n        </>\n    )\n}\n\nexport default DownloadRoute;","import React from 'react';\nimport styled from 'styled-components';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faTrashAlt, faBars, faCircleNotch } from '@fortawesome/free-solid-svg-icons';\nimport WaypointList from './components/waypoint-list/waypoint-list.component';\nimport LeafletMapLoader from './components/leaflet-map-loader/leaflet-map-loader.component';\nimport DownloadRoute from './components/download-route/download-route.component';\nimport { StoreProvider } from './store/app.store';\n\nlibrary.add(faTrashAlt, faBars, faCircleNotch);\n\nconst AppWrapper = styled.div`\n  display: flex;\n`;\nconst AppSidebar = styled.div`\n  width: 20rem;\n  background-color: #383838;\n  height: 100vh;\n  padding: 1rem;\n  box-sizing: border-box;\n  color: #ffffff;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\nconst AppTitle = styled.h1`\n  margin: 0 0 3rem 0;\n  padding: 0 0 1rem 0;\n  font-size: 1.2rem;\n  border-bottom: 1px solid #fff;\n`;\n\nfunction App() {\n  return (\n    <StoreProvider>\n      <AppWrapper>\n        <AppSidebar>\n            <AppTitle>Route Builder</AppTitle>\n            <WaypointList />\n            <DownloadRoute />\n        </AppSidebar>\n        <LeafletMapLoader />\n      </AppWrapper>\n    </StoreProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}